/*
*   ko.types 0.1.0 (2013-12-01)
*   Created by Manuel Guilbault (https://github.com/manuel-guilbault)
*
*   Source: https://github.com/manuel-guilbault/ko.types
*   MIT License: http://www.opensource.org/licenses/MIT
*/!function(a){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?a(require("knockout"),exports):"function"==typeof define&&define.amd?define(["knockout","exports"],a):a(ko,ko.validation={})}(function(a,b){function c(a,c){b.typeValidators[a]=c}function d(a){return b.typeValidators[a]}function e(a){delete b.typeValidators[a]}function f(){b.typeValidators={}}function g(c,d,e){b.typeConverters[c]=b.typeConverters[c]||{},b.typeConverters[c][d]=a.utils.extend({},e);var f=a.utils.extend({},e),g=f.convertTo;f.convertTo=f.convertFrom,f.convertFrom=g,b.typeConverters[d]=b.typeConverters[d]||{},b.typeConverters[d][c]=f}function h(a,c){return b.typeConverters[a]?b.typeConverters[a][c]:b.typeConverters[c]?b.typeConverters[c][a]:void 0}function i(a,c){delete b.typeConverters[a][c],delete b.typeConverters[c][a]}function j(){b.typeConverters={}}function k(a){return/^\s*$/.test(a)}if(void 0===typeof a)throw"Knockout is required, please ensure it is loaded before loading this plugin";a.utils.extend(b,{typeValidators:{},typeConverters:{},validation:{enableForConversion:!0},addType:c,getType:d,removeType:e,clearTypes:f,addConverter:g,getConverter:h,removeConverter:i,clearConverters:j}),a.types=b,b.addType("boolean",function(a){return null===a||void 0===a||"boolean"==typeof a}),b.addType("date",function(a){return null===a||void 0===a||"[object Date]"===Object.prototype.toString.call(a)}),b.addType("integer",function(a){return null===a||void 0===a||"number"==typeof a&&a%1===0}),b.addType("moment",function(a){return null===a||void 0===a||moment.isMoment(a)}),b.addType("number",function(a){return null===a||void 0===a||"number"==typeof a}),b.addType("string",function(a){return null===a||void 0===a||"string"==typeof a}),b.addConverter("boolean","string",{strict:!1,message:"Invalid boolean value.",convertTo:function(a){return void 0!==a&&null!==a?a.toString():""},convertFrom:function(a,b){if(b.strict){if(k(a))return void 0;var c=/^\s*(true|false)\s*$/i.exec(a);if(null===c)throw new TypeError("Invalid boolean value.");return"true"===c[1].toLowerCase()}return!!a}}),function(){var a={date:"toDateString",iso:"toISOString",json:"toJSON",localeDate:"toLocaleDateString",localeTime:"toLocaleTimeString",locale:"toLocaleString",time:"toTimeString",utc:"toUTCString","default":"toString"};b.addConverter("date","string",{message:"Invalid date value.",format:"default",convertTo:function(b,c){if(void 0===b||null===b)return"";var d=a[c.format];return b[d]()},convertFrom:function(a){if(k(a))return void 0;if(a=new Date(a),isNaN(a.valueOf()))throw new TypeError("Invalid date value.");return a}})}(),b.addConverter("globalized-date","string",{message:"Invalid date value.",format:"d",culture:"en",convertTo:function(a,b){return void 0===a||null===a?"":Globalize.format(a,b.format,b.culture)},convertFrom:function(a,b){if(k(a))return void 0;if(a=Globalize.parseDate(a,b.format,b.culture),isNaN(a.valueOf()))throw new TypeError("Invalid date value.");return a}}),b.addConverter("globalized-number","string",{message:"Invalid float value.",radix:10,format:"n",culture:"en",convertTo:function(a,b){return void 0===a||null===a?"":Globalize.format(a,b.format,b.culture)},convertFrom:function(a,b){if(k(a))return void 0;if(a=Globalize.parseFloat(a,b.radix,b.culture),isNaN(a))throw new TypeError("Invalid float value.");return a}}),b.addConverter("integer","string",{strict:!1,message:"Invalid integer value.",convertTo:function(a){return void 0!==a&&null!==a?a.toString():""},convertFrom:function(a,b){if(k(a))return void 0;if(b.strict&&!/^\s*[0-9]+\s*$/.test(a))throw new TypeError("Invalid integer value.");if(a=parseInt(a,10),isNaN(a))throw new TypeError("Invalid integer value.");return a}}),b.addConverter("moment","string",{strict:!1,language:"en",format:"L",message:"Invalid date/time value.",convertTo:function(a,b){return void 0===a||null===a?"":moment(a).lang(b.language).format(b.format)},convertFrom:function(a,b){if(k(a))return void 0;var c=moment(a,b.format,b.language,b.strict);if(!c.isValid())throw new TypeError("Invalid moment value.");return c}}),b.addConverter("number","string",{strict:!1,message:"Invalid number value.",decimals:0,convertTo:function(a,b){return void 0===a||null===a?"":b.decimals>0?a.toFixed(b.decimals):a.toString()},convertFrom:function(a,b){if(k(a))return void 0;if(b.strict&&!/^\s*[0-9]+(\.[0-9]+)?\s*$/.test(a))throw new TypeError("Invalid number value.");if(a=parseFloat(a),isNaN(a))throw new TypeError("Invalid number value.");return a}}),a.extenders.convert=function(c,d){var e=d;if("string"==typeof e){if(!c.dataType)throw new Error("fromType is missing");e={fromType:c.dataType,toType:e}}else!e.fromType&&c.dataType&&(e.fromType=c.dataType);e.fromType&&e.toType?(baseOptions=b.getConverter(e.fromType,e.toType),delete e.fromType,delete e.toType):baseOptions={},e=a.utils.extend(baseOptions,e);var f=a.observable(e.convertTo(c(),e));return f.subscribe(function(a){var b=!0;try{a=e.convertFrom(a,e),event=void 0}catch(d){b=!1,event={value:a,error:d}}e.onValidate&&e.onValidate(b,event),b&&c(a)}),a.validation&&b.validation.enableForConversion&&(f=f.extend({validation:{validator:function(a){try{return e.convertFrom(a,e),!0}catch(b){return!1}},message:e.message||"Invalid value."}})),f},a.extenders.type=function(c,d){var e,f;"string"==typeof d?(e=b.getType(d),f=d):(e=d,f=void 0);var g=a.computed({read:function(){return c()},write:function(a){if(!e(a))throw f?new TypeError("Invalid type : expected "+f+"."):new TypeError("Invalid type.");c(a)}});return g.dataType=f,g}});